v0.0
====

This page describes version 0.0, and any patch-level changes within it.  Due to
the extremely rapid development and unstable / nonexistent API, this changelog
section is organized by dates and/or important commit hashes rather than
version numbers.

2023-11-11
----------

* Clean out (almost) all Sphinx doc generation warnings

  * Turn on InterSphinx, and enable Python 3 doc linking (if anyone finds an
    intersphinx inventory for C language, let me know...)
  * Silence errors for C identifier types
  * Turn on Sphinx nitpicky mode

* Improve code coverage report details

  * Only include TagVFS code, not anything linked
  * Enable branch analysis

* Add unit test #1 of ... hopefully, more ... for tvwo

2023-11-08
----------

* Add parallel build option (to :file:`bld.py`, controlled via
  :kconfig:option:`CONFIG_MAKE_PARALLEL`)
* Add more unit tests
* Enable branch coverage analysis in :file:`scripts/coverage.sh`

2023-11-05
----------

* Implement more tests in v3 API
* Removed v2 API unit tests

  * Removed Kconfig options and ``unittest.h`` conditionals for switching
    between v2 and v3

* Added test05.tvw andd test06.tvw cases for ``tvw_i`` tests

2023-11-03
----------

* Implement more tests in v3 API

2023-10-30
----------

* Implement Kconfigs and CMake settings to build unit tests with either v2 or
  v3 assertion API.  Implemented a *few* v3-based tests.

2023-10-28
----------

* Continue adding unit tests with Criterion
* Realize Criterion v2 assertion API is deprecated; emailed creator to check
  stability of v3 API.  Planning to switch to v3 API.

2023-10-26
----------

* Added documentation about, build options for, and unit tests with the
  Criterion framework (see :ref:`devenv-unittest`)
* Added :file:`scripts/coverage.sh` as a ``gcov`` / ``lcov`` ease-of-use
  wrapper

2023-10-23
----------

* Reworked compression table to not use the index as algo ID

  * Added Kconfigs for existing algorithms (no comp, and table test mangle)
  * Updated necessary libraries & executables to match functionality

* Discovered ``sphinx-copybutton`` extension.  Works very nicely.  10/10.
* Updated various documentation items
* Created :file:`doc/from-zero.md`; explaining how to get the documentation, at
  least until it's published somewhere.  Having rST docs on how to build rST
  docs isn't all that useful unless they're already built somewhere, which they
  aren't...
* Added :py:attr:`tv_version.VERSION_GIT_BRANCH`

2023-10-22
----------

* Implemented compression in ``tvw_o.c``
* Clarified wrapper file format WRT size details
* Redid :file:`test/resources/test08.tvw` to use the actual compression algo

2023-10-21
----------

* Renamed compression library & sourcecode files (again)
* Improved the now-has-a-name ``tvctool`` executable to support the following
  operations:

  * Print algorithm table
  * Compress arbitrary data with any available algorithm
  * Extract arbitrary compressed data with any available algorithm

* Added man page for ``tvctool``
* Added ``tvmisc`` library for random shared functions

  * Linked to ``tvctool`` and ``tvwmake`` at compile time

2023-10-19
----------

* Renamed compression library & sourcecode files
* Add utility to print compression algorithm table

2023-10-18
----------

* Added compression table effectivity test manglers
* ``tvw_i.c`` performs decompression of file content data
* Documented ``tvcompression`` library
* Added :file:`test/resources/test08.tvw`, with compression ID ``1``
  (effectivity test) set on both metadata and file contents (though, since
  ``tvw_o.c`` does not perform compression on either, the data is still written
  plainly)

2023-10-17
----------

* Create ``tvcompression`` library

  * Compresion algorithm table
  * No-change passthrough function (no compression)
  * Created CMakeLists.txt component, static link at compile time to ``tvwio``
    library

* ``tvw_i.c`` performs decompression of wrapper metadata

2023-10-15
----------

New features:

* Updated example file metadata

  * :file:`test/resources/test07.tvw` with metadata to match

* Reorder installation doc
* ``tvwdump`` (optionally) prints parsed metadata XML structure as well as raw
  as-read
* ``tvwdump`` and ``tvwmake`` have more sensible argument structures


2023-10-03
----------

New features:

* Added changelog
* Added version info page to documentation

Prior
-----

.. note::

   This section of the changelog predates the actual changelog.  Entries in
   this section are just typed out roughly in the order I remember them; I
   didn't reference the git log.  If you want to do so, the commit to go to is
   ``513460d3ceaa910bcc62e79ef2eba40360b07359``.

* Added version info file & made available to build
* Added ``argp`` to :doc:`/manpages/tvwdump` and :doc:`/manpages/tvwmake`
  executables
* Add Kconfig search bar to docs (thanks, Zephyr!)
* Parse XML-based metadata
* Extract documentation from C sourcecode
* Implement Kconfig-settable logging macros
* Add Kconfig menu/config system
* Complete(ish) tvw reader implementation
* Rename project from ``photothing`` to ``tagvfs``
* Define wrapper file format
* Create project

